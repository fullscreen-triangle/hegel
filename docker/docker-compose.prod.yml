version: '3.8'

services:
  # Nginx reverse proxy for handling requests
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - llm-service
    restart: always
    networks:
      - hegel-network

  # Frontend React application
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      args:
        - NODE_ENV=production
    restart: always
    depends_on:
      - backend
    networks:
      - hegel-network
    environment:
      - NODE_ENV=production

  # Backend API service
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    restart: always
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change_this_in_production}
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
    depends_on:
      - neo4j
    volumes:
      - ./data:/app/data
      - ./logs/backend:/app/logs
    networks:
      - hegel-network

  # LLM Service for AI-guided evidence rectification
  llm-service:
    build:
      context: .
      dockerfile: docker/llm-service/Dockerfile
    restart: always
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - MAX_TOKENS=2048
      - TEMPERATURE=0.7
    volumes:
      - ./logs/llm-service:/app/logs
      - ./models:/app/models
    networks:
      - hegel-network

  # Neo4j database for molecular relationships
  neo4j:
    image: neo4j:4.4-enterprise
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - ./data/neo4j:/data
      - ./logs/neo4j:/logs
    restart: always
    networks:
      - hegel-network

# Docker networks
networks:
  hegel-network:
    driver: bridge

# Shared volumes
volumes:
  data:
  logs: 